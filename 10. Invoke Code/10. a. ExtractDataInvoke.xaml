<Activity mc:Ignorable="sap sap2010" x:Class="_10__a__ExtractDataInvoke" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="istrtext" Type="InArgument(x:String)" />
    <x:Property Name="ijobjFile" Type="InArgument(njl:JObject)" />
    <x:Property Name="iodtCurrentData" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <this:_10__a__ExtractDataInvoke.istrtext>
    <InArgument x:TypeArguments="x:String" />
  </this:_10__a__ExtractDataInvoke.istrtext>
  <this:_10__a__ExtractDataInvoke.ijobjFile>
    <InArgument x:TypeArguments="njl:JObject" />
  </this:_10__a__ExtractDataInvoke.ijobjFile>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1112.8,1141.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_10__a__ExtractDataInvoke_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Return maching data from text using regex pattern&#xA;and storing all matching data in datatable" DisplayName="_10__a__ExtractDataInvoke" sap:VirtualizedContainerService.HintSize="512,1076.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictMatches" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="odictMatches =New Dictionary(Of String,String)&#xA;Dim regex As system.text.RegularExpressions.Regex&#xA;Dim match As System.Text.RegularExpressions.Match&#xA;For Each jpropVarName As Newtonsoft.Json.Linq.JProperty In ijobjRegex.Item(istrBookingSource)&#xA;&#x9;'Console.WriteLine(jpropVarName.Name)&#xA;&#x9;Dim jtokVarName As Newtonsoft.Json.Linq.JToken = jpropVarName.Value&#xA;&#x9;For Each jpropRegexListName As Newtonsoft.Json.Linq.JProperty In jtokVarName&#xA;&#x9;&#x9;'console.WriteLine(jpropRegexListName.Name)&#xA;&#x9;&#x9;Dim RegexPatterns As Newtonsoft.Json.Linq.JToken = jpropRegexListName.Value&#xA;&#x9;&#x9;For Each Regexx As Newtonsoft.Json.Linq.JValue In RegexPatterns&#xA;&#x9;&#x9;&#x9;'console.WriteLine(regexx)&#xA;&#x9;&#x9;&#x9;regex=New System.Text.RegularExpressions.Regex(Regexx.ToString)&#xA;&#x9;&#x9;&#x9;match=regex.Match(istrText)&#xA;&#x9;&#x9;&#x9;If match.Success&#xA;&#x9;&#x9;&#x9;&#x9;'console.WriteLine(match.Value)&#xA;&#x9;&#x9;&#x9;&#x9;odictMatches(jpropVarName.Name)=match.Groups(&quot;group&quot;).Value.Trim&#xA;&#x9;&#x9;&#x9;&#x9;Exit For&#xA;&#x9;&#x9;&#x9;Else&#xA;&#x9;&#x9;&#x9;&#x9;odictMatches(jpropVarName.Name)=&quot;Not found&quot;&#xA;&#x9;&#x9;&#x9;End If&#xA;&#x9;&#x9;Next&#xA;&#x9;Next&#xA;Next" DisplayName="Invoke Code-Extract Matches pattern from Data" sap:VirtualizedContainerService.HintSize="449.6,196.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="njl:JObject" x:Key="ijobjregex">[ijobjFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="istrBookingSource">PDF</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="istrText">[istrtext]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="odictMatches">[dictMatches]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <If Condition="[not (dictMatches(&quot;strEmailID&quot;).Contains(&quot;Not found&quot;) AndAlso dictMatches(&quot;strHotelName&quot;).Contains(&quot;Not found&quot;) AndAlso dictMatches(&quot;strGuestName&quot;).Contains(&quot;Not found&quot;) AndAlso dictMatches(&quot;strUniqueRefNumber&quot;).Contains(&quot;Not found&quot;) AndAlso  dictMatches(&quot;strCheckinDate&quot;).Contains(&quot;Not found&quot;))]" DisplayName="If-Check pdf/body contains required data or not" sap:VirtualizedContainerService.HintSize="449.6,747.2" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="add data in to current datatable" DisplayName="Then-Required data fetches" sap:VirtualizedContainerService.HintSize="416,331.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{dictMatches(&quot;strEmailID&quot;),dictMatches(&quot;strHotelName&quot;),dictMatches(&quot;strGuestName&quot;), dictMatches(&quot;strUniqueRefNumber&quot;), dictMatches(&quot;strCheckinDate&quot;), dictMatches(&quot;strCheckoutDate&quot;),dictMatches(&quot;strNumberOfAdult&quot;), dictMatches(&quot;strRoomType&quot;)}]" DataTable="[iodtCurrentData]" DisplayName="Add Data Row-For current mail " sap:VirtualizedContainerService.HintSize="353.6,211.2" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:AddDataRow>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else-data not found" sap:VirtualizedContainerService.HintSize="416,254.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;pdf/body doesn't contains required information...&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>